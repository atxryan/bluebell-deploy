apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: prometheus-adapter
  namespace: linkerd
  annotations:
    fluxcd.io/ignore: "false"
spec:
  releaseName: prometheus-adapter
  chart:
    repository: https://kubernetes-charts.storage.googleapis.com/
    name: prometheus-adapter
    version: 1.4.0
  values:
    prometheus:
      url: http://linkerd-prometheus.linkerd.svc
    rules:
      default: false
      custom:
        - seriesQuery: 'response_latency_ms_bucket{namespace!="",pod!=""}'
          resources:
            template: <<.Resource>>
          name:
            matches: ^(.*)_bucket$
            as: "${1}_50th"
          metricsQuery: histogram_quantile(0.50, sum(irate(<<.Series>>{<<.LabelMatchers>>, direction="inbound"}[5m])) by (le, <<.GroupBy>>))
        - seriesQuery: 'response_latency_ms_bucket{namespace!="",pod!=""}'
          resources:
            template: <<.Resource>>
          name:
            matches: ^(.*)_bucket$
            as: "${1}_95th"
          metricsQuery: histogram_quantile(0.95, sum(irate(<<.Series>>{<<.LabelMatchers>>, direction="inbound"}[5m])) by (le, <<.GroupBy>>))
        - seriesQuery: 'response_latency_ms_bucket{namespace!="",pod!=""}'
          resources:
            template: <<.Resource>>
          name:
            matches: ^(.*)_bucket$
            as: "${1}_99th"
          metricsQuery: histogram_quantile(0.99, sum(irate(<<.Series>>{<<.LabelMatchers>>, direction="inbound"}[5m])) by (le, <<.GroupBy>>))
        - seriesQuery: 'response_total{namespace!="",pod!=""}'
          resources:
            template: <<.Resource>>
          name:
            matches: "^(.*)_total$"
            as: "${1}_per_second"
          metricsQuery: |-
            sum(
              irate(
                <<.Series>>{
                  <<.LabelMatchers>>,
                  direction="inbound"
                }[5m]
              )
            ) by (
              <<.GroupBy>>
            )